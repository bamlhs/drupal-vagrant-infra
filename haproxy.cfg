global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	#reqidel ^X-Forwarded-For:.*
	#http-request set-header X-Forwarded-For %[src]
	option http-server-close
option forwardfor except 127.0.0.1 header my-X-Forwarded-For
#option forwardfor except 127.0.0.1
#option forwardfor except 192.168.33.0/8
	option                  redispatch        
	timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http_front
   bind *:80
   stats uri /haproxy?stats
   # default_backend http_back
   # Define hosts
    acl host_jenkins hdr(host) -i jenkins.drpl.info
    acl host_gitlab hdr(host) -i gitlab.drpl.info

   # acl host_web hdr(host) -i drpl.info
   # acl host_web hdr(host) -i drpl.info
    acl host_var1 hdr(host) -i var1.drpl.info
    acl host_var2 hdr(host) -i var2.drpl.info
    acl host_web hdr(host) -i drpl.info


        ## figure out which one to use
    use_backend jenkins_cluster if host_jenkins
    use_backend gitlab_cluster if host_gitlab

    use_backend web_cluster if host_web
    use_backend var1_cluster if host_var1
    use_backend var2_cluster if host_var2


backend jenkins_cluster
   balance roundrobin
   server 216.244.86.162 jenkins:8080 check


backend gitlab_cluster
   balance roundrobin
   server 216.244.86.162 gitlab:80 check


backend web_cluster
   balance roundrobin
   server 216.244.86.162 varnish1:6081 check
   server 216.244.86.162 varnish2:6081 check



backend var1_cluster
   balance roundrobin
   server 216.244.86.162 varnish1:6082 check

backend var2_cluster
   balance roundrobin
   server 216.244.86.162 varnish2:6082 check

